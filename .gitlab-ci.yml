before_script:
  - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  - apt-get update -yq && apt-get install -y lintian libwxgtk3.0-dev

#############
# Templates
#############
.amd64_template: &amd64_job   # Hidden job that defines an anchor named 'amd64_job'
  image: registry.roboception.de/tools/docker_images:buildimage
  tags:
    - amd64
    - docker

.armhf_template: &armhf_job   # Hidden job that defines an anchor named 'armhf_job'
  image: registry.roboception.de/tools/docker_images:armhf-buildimage
  tags:
    - armhf
    - docker

.amd64_xenial_template: &amd64_xenial_job
  image: registry.roboception.de/tools/docker_images:xenial-buildimage
  tags:
    - amd64
    - docker

.armhf_xenial_template: &armhf_xenial_job
  image: registry.roboception.de/tools/docker_images:armhf-xenial-buildimage
  tags:
    - armhf
    - docker

.test_t: &test
  stage: test
  script:
    - mkdir build
    - cd build
    - cmake ..
    - make -j 4
    - CTEST_OUTPUT_ON_FAILURE=1 make test

.package_t: &package
  stage: deploy
  script:
    - mkdir build && cd build
    - cmake -DRCDISCOVER_CLI_ONLY_DEB=ON -DRCDISCOVER_GUI_ONLY_DEB=OFF ..
    - make -j4 package
    - cmake -DRCDISCOVER_CLI_ONLY_DEB=OFF -DRCDISCOVER_GUI_ONLY_DEB=ON ..
    - make -j4 package
    - upload_deb.sh $DISTRO_CODENAME-$REPO_POSTFIX *.deb

.package_testing_t: &package_testing
  variables:
    REPO_POSTFIX: testing
  <<: *package
  only:
    - master

.package_stable_t: &package_stable
  variables:
    REPO_POSTFIX: stable
  <<: *package
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches

.docker_build_t: &docker_build
  image: docker:latest
  before_script:
    - echo "skipping before_script"
  script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - if [ -n "$CI_COMMIT_TAG" ]; then export IMAGE_TAG=$CI_COMMIT_TAG ; else export IMAGE_TAG=$CI_COMMIT_REF_SLUG ; fi
    - if [ "$CI_COMMIT_REF_NAME" = "master" ]; then export IMAGE_TAG=latest ; fi
    - docker build $DOCKER_BUILD_FLAGS -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
  tags:
    - docker-build

##############
#### Jobs ####
##############
gen_dox:
  <<: *amd64_job
  variables:
    TESTING_DEBS: "true"
  stage: deploy
  script:
    - apt-get install -y doxygen ncftp
    - mkdir build
    - cd build
    - cmake ..
    - make doc
    - upload_dox.sh doc/html
  only:
    - master
    - tags
  tags:
    - docs

# Test (on every commit)
########################
test_amd64:
  <<: *amd64_job
  <<: *test

test_armhf:
  <<: *armhf_job
  <<: *test

test_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *test

test_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *test

# Deploy testing (only on master)
#################################
package_testing_amd64:
  <<: *amd64_job
  <<: *package_testing

package_testing_armhf:
  <<: *armhf_job
  <<: *package_testing

package_testing_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *package_testing

package_testing_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *package_testing

# Deploy stable (only for releases, version tags)
#################################################
package_stable_amd64:
  <<: *amd64_job
  <<: *package_stable

package_stable_armhf:
  <<: *armhf_job
  <<: *package_stable

package_stable_xenial_amd64:
  <<: *amd64_xenial_job
  <<: *package_stable

package_stable_xenial_armhf:
  <<: *armhf_xenial_job
  <<: *package_stable

# Build and push as docker image
################################
build:image:
  stage: deploy
  <<: *docker_build
  except:
    - schedules

build:image:nocache:
  stage: deploy
  variables:
    DOCKER_BUILD_FLAGS: "--no-cache"
  <<: *docker_build
  when: manual
